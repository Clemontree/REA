clear all

%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\g.calabro-souza\Documents\Doctorat\Spring Campaign 2021\Ru de la Loge\20210421\loge102.dat
%
% To extend the code to different selected data or a different text file, generate a function instead of a script.

% Auto-generated by MATLAB on 2021/04/21 12:56:41

%% Initialize variables.
filename = 'C:\Users\g.calabro-souza\Documents\Doctorat\Spring Campaign 2021\Lake Champs\20210605\Champs02.dat';
%filename = 'C:\Users\g.calabro-souza\Documents\Doctorat\Spring Campaign 2021\Lake Champs\20210528\Champs01.dat';
%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%5f%6f%9f%9f%9f%6f%6f%6f%7f%7f%7f%6f%6f%6f%8f%6f%6f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this code. If an error occurs for a different file, try regenerating the code from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'EmptyValue', NaN,  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post processing code is included. To generate code which works for unimportable data, select unimportable cells in a file and regenerate the script.

%% Create output variable
data = [dataArray{1:end-1}];
%% Clear temporary variables
clearvars filename formatSpec fileID dataArray ans;

%% Clean data from low correlation
%for 2 for 30/05 last 2 for 29/05 
%data(691200+(24*60*60*8):end,:) = [];
%data(1:345600+(24*60*60*8),:)=[];
%data(691200:end,:) = [];
%data(1:345600,:)=[];

Correlation = data(:,12:14);
SNR = data(:,9:11);
[row,col] = find(Correlation<70);
[row2,col] = find(SNR<15);

%X = loge201(:,3);
Velocities = data(:,3:5);

Velocities(row,:) = NaN;
Velocities(row2,:) = NaN;

VelocityDespiked = fillmissing(Velocities,'linear','EndValues','nearest');


[VelocityDespiked(:,1), ~] = func_despike_phasespace3d( VelocityDespiked(:,1), 0, 2 );
[VelocityDespiked(:,2), ~] = func_despike_phasespace3d( VelocityDespiked(:,2), 0, 2 );
[VelocityDespiked(:,3), ~] = func_despike_phasespace3d( VelocityDespiked(:,3), 0, 2 );


%% planar fit (PF)

PTest2 = zeros(1,3);
bTest2 = zeros(1,1);
l=1;
for j = 1*60*8:10*60*8:length(VelocityDespiked)
ave=10*8;
VelocityPF = VelocityDespiked(1:j,:);
u=nan(floor(length(VelocityPF)/ave),3);
for i=1:floor(length(VelocityPF)/ave)
    u(i,1)=nanmean(VelocityPF((i-1)*ave+1:i*ave,1));
    u(i,2)=nanmean(VelocityPF((i-1)*ave+1:i*ave,2));
    u(i,3)=nanmean(VelocityPF((i-1)*ave+1:i*ave,3));
end
H=[length(u) sum(u(:,1)) sum(u(:,2)); sum(u(:,1)) sum(u(:,1).*u(:,1)) sum(u(:,1).*u(:,2)); sum(u(:,2)) sum(u(:,1).*u(:,2)) sum(u(:,2).*u(:,2))];
g=[sum(u(:,3)) sum(u(:,1).*u(:,3)) sum(u(:,2).*u(:,3))];
b=H\g';
bTest2(l,:)= b(1,1);
p31=-b(2)/sqrt(b(2)^2+b(3)^2+1);
p32=-b(3)/sqrt(b(2)^2+b(3)^2+1);
p33=1/sqrt(b(2)^2+b(3)^2+1);
D=[sqrt(p32^2+p33^2) 0 p31; 0 1 0; -p31 0 sqrt(p32^2+p33^2)];
C=[1 0 0; 0 p33/sqrt(p32^2+p33^2) p32/sqrt(p32^2+p33^2); 0 -p32/sqrt(p32^2+p33^2) p33/sqrt(p32^2+p33^2)];
P=D'*C';
PTest2(l,:)= P(3,:);
u4=(D'*C'*[VelocityPF(:,1) VelocityPF(:,2) VelocityPF(:,3)-b(1)]')';
a=atan2(nanmean(u4(:,2)), nanmean(u4(:,1)));    %rotation around z-axis
u4(:,1)=u4(:,1)*cos(a)+u4(:,2)*sin(a);
u4(:,2)=-u4(:,1)*sin(a)+u4(:,2)*cos(a);
%clear H g p31 p32 p33 D C a
VelocityPF = VelocityDespiked;
l=l+1;
end
%clear a

w0=0.75*std(u4(:,3));